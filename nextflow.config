profiles {
    standard {
        process {
            executor = 'local'
        }
    }
    // UBC-ML cluster
    // more info: https://github.com/plai-group/cluster-docs/wiki/UBC-ML-Cluster
    ubcml {
        conda.enabled = true
    	process {
    	    scratch = true
            process.conda = "$baseDir/custom-conda-env.yml"
	    clusterOptions = '--account=rti --partition=ubcml-rti'
	    withLabel: cluster_light_job {
	        executor = 'slurm'
                cpus = 2
                memory = 4.GB
                time = '10m'
            }
            withLabel: cluster_full_job {
	        executor = 'slurm'
                cpus = 9
        	memory = 32.GB
        	time = '4h'
    	    }
	    withLabel: local_job {
		executor = 'local'
	    }
	}
    }
    // Compute Canada
    CC {
    	process {
	    clusterOptions = '--account=def-bouchar3'
	    withLabel: cluster_light_job {
	        scratch = true
	        executor = 'slurm'
                cpus = 2
                memory = 4.GB
                time = '10m'
            }
            withLabel: cluster_full_job {
	        scratch = true
	        executor = 'slurm'
                cpus = 9
        	memory = 48.GB
        	time = '4h'
    	    }
	    withLabel: local_job {
	        // cannot use scratch=true otherwise set_up_env fails
		executor = 'local'
	    }
	}
    }
    // Sockeye cluster
    sockeye {
        conda.enabled = true
        process {
            scratch = true
            process.conda = "$baseDir/custom-conda-env.yml"
	    clusterOptions = '-A st-tdjc-1'
	    withLabel: cluster_light_job {
	        executor = 'pbspro'
	        cpus = 2
                memory = 4.GB
                time = '10m'
            }
            withLabel: cluster_full_job {
                executor = 'pbspro'
                cpus = 9
        	memory = 48.GB
        	time = '4h'
    	    }
	    withLabel: local_job {
		executor = 'local'
	    }
        }
    }
}

executor {
  $local {
      cpus = 4
      memory = 12.GB
  }
  $slurm {
      queueSize = 200
  }
  $pbspro {
      queueSize = 200
  }
}

